# Implementations of Daniel Bernstein's ChaCha stream cipher

An experiment in tiptronic generation of implementations of cryptographic
code.

Intended to be a collection of implementations of ChaCha/{20,12,8}; and
to contain some test-cases useful in addition to the Strombergson I-D
test vectors. (In particular, this repo will eventually include KATs
that approach the two stream positions `2^(32n) % 2^64` from below.)

The implementations are, so far as possible, generated by Python code;
a ninja script is included for testing. 

Little-endian support only; this dramatically simplifies code at
essentially no cost.[^1]

Architecture-independent targets:

    C11      (done)
    Coq      (maybe)

Architecture/assembler targets:

    SSSE4_2
    NEON


NOTE: I realized that how the ChaCha state is handled at present makes
these implementations unnecessarily vulnerable to memory scans for
key material. (Though no more so than than several -- but not all -- of
the SUPERCOP implementations.) If DMA attacks, stack-smashing, or really
stupid input sanitization bugs are possible (cf Heartbleed) in your
application, you really need to be more careful than this.

This will be fixed.
